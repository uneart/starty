    /* Small Devices ------------ */
  @media only screen and (max-width: $screenSmall - 1) {

    /* Global Misc --- */
    /*                 */
    .left, .right { float: none; }
    body { -webkit-text-size-adjust: none; -ms-text-size-adjust: none; width: 100%; min-width: 0; margin-#{$defaultFloat}: 0; margin-#{$defaultOpposite}: 0; padding-#{$defaultFloat}: 0; padding-#{$defaultOpposite}: 0; }

    /* The Grid --- */
    /*              */
    .row { width: auto; min-width: 0; margin-#{$defaultFloat}: 0; margin-#{$defaultOpposite}: 0; }
    .column, .columns { width: auto !important; float: none;  }
    .column:last-child, .columns:last-child { float: none; }
    [class*="column"] + [class*="column"]:last-child { float: none; }
    .column:before, .columns:before, .column:after, .columns:after { content:""; display:table; }
    .column:after, .columns:after { clear: both; }

    // Placeholder classes for mobile grid overrides
    %no-default-margin { margin-#{$defaultFloat}: 0 !important; }
    %default-auto { #{$defaultFloat}: auto; }
    %opposite-auto { #{$defaultOpposite}: auto; }

    @for $i from 1 through $totalColumns - 2 {
      .offset-by-#{convert-number-to-word($i)} { @extend %no-default-margin; }
    }
    @for $i from 2 through $totalColumns - 2 {
      .push-#{convert-number-to-word($i)} { @extend %default-auto; }
      .pull-#{convert-number-to-word($i)} { @extend %opposite-auto; }
    }

    /* Mobile 4-column Grid */
    @for $i from 1 through $mobileTotalColumns {
      .row {
        .mobile-#{convert-number-to-word($i)} { width: gridCalc($i, $mobileTotalColumns) !important; float: $defaultFloat; padding: 0 ($columnGutter/2);
          &:last-child { float: $defaultOpposite; }
          &.end { float: $defaultFloat; }
        }
        &.collapse {
          .mobile-#{convert-number-to-word($i)} { padding: 0; }
        }
      }
    }
    @for $i from 1 through $mobileTotalColumns - 1 {
      .push-#{convert-number-to-word($i)}-mobile { #{$defaultFloat}: gridCalc($i, $mobileTotalColumns); }
      .pull-#{convert-number-to-word($i)}-mobile { #{$defaultOpposite}: gridCalc($i, $mobileTotalColumns); }
    }

    /* Block Grids --- */
    /*                 */
    .block-grid.mobile {
      &>li { float: none; width: 100%; margin-#{$defaultFloat}: 0; }
    }

    .block-grid {
      &>li { clear: none !important; }
      @for $i from 1 through $blockGridElements {
        &.mobile-#{convert-number-to-word($i)}-up>li {
          width: 100%/$i;
          @if $i > 1 { &:nth-child(#{$i}n+1) { clear: both; } }
        }
      }
    }
  }